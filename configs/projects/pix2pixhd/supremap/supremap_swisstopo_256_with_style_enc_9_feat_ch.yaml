# How often do you want to save output images during training.
image_save_iter: 100
# How often do you want to save trained models.
snapshot_save_epoch: 5
snapshot_save_iter: 500
# How often do you want to log the training stats.
logging_iter: 100
# Number of training epochs.
max_epoch: 5000

# trainer options
trainer:
    type: imaginaire.trainers.pix2pixHD
    amp_config:
        enabled: True
    model_average_config:
        enabled: True
        beta: 0.999
        start_iteration: 500
        num_batch_norm_estimation_iterations: 0

    gan_mode: hinge
    gan_relativistic: False
    perceptual_loss:
        mode: 'vgg19'
        layers: ['relu_1_1', 'relu_2_1', 'relu_3_1', 'relu_4_1', 'relu_5_1']
        weights: [0.03125, 0.0625, 0.125, 0.25, 1.0]
    loss_weight:
        gan: 1.0
        feature_matching: 10.0
        perceptual: 10.0
    init:
        type: xavier
        gain: 0.02

# model options
gen:
    type: imaginaire.generators.pix2pixHD
    global_generator:
        num_filters: 64
        num_downsamples: 4
        num_res_blocks: 9
    local_enhancer:
        num_enhancers: 0
        num_res_blocks: 3
    weight_norm_type: spectral
    activation_norm_type: instance
    padding_mode: reflect
    enc:
        # all other parameters have defaults; see generators/pix2pixHD.py
        num_feat_channels: 9  # 3, according to Sec. 4 of paper;
                              # further confirmed by "getattr(enc_cfg, 'num_feat_channels', 3)"
                              # in generators/pix2pixHD.py
        blur_input: True  # use low-resolution (Sentinel) input for style encoder

dis:
    type: imaginaire.discriminators.multires_patch
    num_filters: 64
    max_num_filters: 512
    num_discriminators: 2
    num_layers: 3
    weight_norm_type: spectral
    activation_norm_type: instance

# optimization option
gen_opt:
    type: adam
    lr: 0.0002
    adam_beta1: 0.5
    adam_beta2: 0.999
    lr_policy:
        iteration_mode: False
        type: step
        step_size: 99999999
        gamma: 0.1
dis_opt:
    type: adam
    lr: 0.0002
    adam_beta1: 0.5
    adam_beta2: 0.999
    lr_policy:
        iteration_mode: False
        type: step
        step_size: 99999999
        gamma: 0.1

# Data options.
data:    
    name: 'supremap_swisstopo'
    type: imaginaire.datasets.paired_images    
    num_workers: 4
    input_types:
        - images:
            ext: png
            num_channels: 3
            normalize: True
        - blurred:
            ext: png
            num_channels: 3
            normalize: True
        - seg_maps:
            ext: png
            num_channels: 1
            is_mask: True
            normalize: False
            
        - instance_maps:
            ext: png
            num_channels: 1
            is_mask: True
            normalize: False

    full_data_ops: imaginaire.model_utils.label::make_one_hot, imaginaire.model_utils.label::concat_labels
    use_dont_care: False
    one_hot_num_classes:
        seg_maps: 6
    input_labels:
        - seg_maps
        - instance_maps

    input_image:
        - images

    # Train dataset details.
    train:
        roots:
            - dataset/supremap_imaginaire_swisstopo_dataset/train
        batch_size: 12
        augmentations:
            resize_smallest_side: 256
            random_scale_limit: 0.2
            horizontal_flip: True
            random_crop_h_w: 256, 256            

    # Validation dataset details.
    val:        
        roots:
            - dataset/supremap_imaginaire_swisstopo_dataset/val
        batch_size: 12
        augmentations:
            resize_h_w: 256, 256
            horizontal_flip: False

pretrained_weight: 1B3bXpQQzidJW0G3oCjYSWYEn2zd8h9dg
inference_args:
    random_style: False

test_data:    
    name: 'supremap_swisstopo'    
    type: imaginaire.datasets.paired_images    
    num_workers: 4
    input_types:
        - images:
            ext: png
            num_channels: 3
            normalize: True
        - blurred:
            ext: png
            num_channels: 3
            normalize: True
        - seg_maps:
            ext: png
            num_channels: 1
            is_mask: True
            normalize: False
        - instance_maps:
            ext: png
            num_channels: 1
            is_mask: True
            normalize: False

    full_data_ops: imaginaire.model_utils.label::make_one_hot, imaginaire.model_utils.label::concat_labels
    use_dont_care: False
    one_hot_num_classes:
        seg_maps: 6
    input_labels:
        - seg_maps
        - instance_maps

    paired: True    
    test:
        is_lmdb: False
        roots:
            - dataset/supremap_imaginaire_swisstopo_dataset/val
        batch_size: 1
        augmentations:
            resize_h_w: 256, 256
            horizontal_flip: False
